library(pracma)
library(ma391ekang)
Outer = function(f,x){
  n1 = length(x[[1]])
  n2 = length(x[[2]])
  res = matrix(0,nrow=n1,ncol=n2)
  rownames(res) = x[[1]]
  colnames(res) = x[[2]]
  for (i in 1:n1){
    for (j in 1:n2){
      res[i,j]=f(c(x[[1]][[i]],x[[2]][[j]]))
    }
  }
  return(res)
}

path = function(f,x0,deltat=0.01,N=1000,tol=1E-4){
  points=matrix(0,ncol=2)
  points[1,] = x0
  n = 0
  p = c(1,1)
  while(norm2(p)>tol & n<N){
    n=n+1
    p = f(x0)*deltat
    x0=x0+p
    points = rbind(points,x0)
  }
  
  rownames(points)=0:n
  return(points)
}

library(pracma)
quiver <- function(x, y, u, v,
                   scale = 0.05, angle = 10, length = 0.1, ...) {
  stopifnot(is.numeric(x), is.numeric(y), is.numeric(u), is.numeric(v))
  
  arrows(x, y, x+scale*u, y+scale*v, angle=10, length=length, ...)
}

vectorfield = function(fun, xlim, ylim, n = 16,
                       scale = 0.05, col = "darkblue",xlab = "xlim", ylab="ylim", 
                       main="",...) {
  stopifnot(is.numeric(xlim), length(xlim) == 2,
            is.numeric(ylim), length(ylim) == 2)
  
  xpts = linspace(xlim[1], xlim[2], n)#seq(xlim[1],xlim[2],length.out=n)
  ypts = linspace(ylim[1], ylim[2], n)#seq(ylim[1],ylim[2],length.out=n)
  
  M = meshgrid(xpts, ypts)
  x = M$X
  y = M$Y
  px=M$X
  py=M$Y
  for (i  in 1:n){
    for (j in 1:n){
      ans = fun(c(xpts[j],ypts[i]))           
      px[i,j]=ans[1]
      py[i,j]=ans[2]
    }
  }
  
  
  plot(xlim, ylim, type="n",xlab=xlab,ylab=ylab,main=main); grid()
  quiver(x, y, px, py, scale = scale, col = col, ...)   
  #return(list(px=px,py=py))
}

##Example 4.4
lambda = 2.01
f = function(x){c(-lambda*x[1],
                  -lambda*x[2])}

x0 = c(10,10)
vectorfield(f, xlim = c(-2,2), ylim = c(-2,2))

pts = path(f,x0,deltat=1)
tail(pts)

#Example 4.3
kw = 2.1
f = function(x){c(-kw*x[1],
                  x[1]-x[2])}
vectorfield(f, xlim = c(-2,2), ylim = c(-2,2))

x0=c(2,1)
pts=path(f,x0,deltat = 1)
tail(pts)
print(pts)
