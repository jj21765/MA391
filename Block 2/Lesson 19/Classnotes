library(ma391ekang)
library(pracma)


norm2 = function(v){sqrt(v[1]^2+v[2]^2)}

path = function(f,x0,deltat=0.01,N=1000,tol=1E-4){
  points=matrix(0,ncol=2)
  points[1,] = x0
  n = 0
  p = c(1,1)
  while(norm2(p)>tol & n<N){
    n=n+1
    p = f(x0)*deltat
    x0=x0+p
    points = rbind(points,x0)
  }

  rownames(points)=0:n
  return(points)
}

alpha = 0.1; beta = 2
f = function(x){
  #the greater than 0 are booleans 
  res = c((-0.05*x[2]-0.0001*x[1]*x[2]+20)*((x[1]>0)*(x[2]>0)), 
          (-0.05*alpha*x[1]*-0.0001*beta*x[1]*x[2]+30)*((x[1]>0)*(x[2]>0)))
  
  if(res[1]+x[1]<0){res[1]=-x[1]}
  if(res[2]+x[2]<0){res[2]=-x[2]}
  return(res)
}
#differential, deltat can be as small as possible 
#recursion, we need certain time increments: deltat = 1
insurgency = path(f,c(2000,2000), deltat = 1)
tail(insurgency)

ins = seq(2080,2090,1)
for(i in 1:length(ins)){
  print(ins[i])
  print(tail(path(f,c(ins[i],2000),deltat=1, N=2000)))
}

#NUMBER 3

simulate = function(alpha,beta){
  f = function(x){
    #the greater than 0 are booleans 
    res = c((-0.05*x[2]-0.0001*x[1]*x[2]+20)*((x[1]>0)*(x[2]>0)), 
            (-0.05*alpha*x[1]*-0.0001*beta*x[1]*x[2]+30)*((x[1]>0)*(x[2]>0)))
    
    if(res[1]+x[1]<0){res[1]=-x[1]}
    if(res[2]+x[2]<0){res[2]=-x[2]}
    return(res)
  }
  ins = path(f,c(2000,2000), deltat = 1)
  forces = tail(ins,1)
  numMonths = length(ins[,1])
  #if u dont pick a column it gives u columns times rows so juts pick a random column
  return(list(ins = forces[1],police=forces[2],numMonths=numMonths))
  #Creates the columns aside from alpha and beta
  #look at the sheet to see the columns 
  
}
simulate(0.1,2)
a = seq(0.05,0.5,0.05)
b = seq(1,3,0.5)
idx = 0
ans.ins=0;ans.police=0;ans.months=0
for(i in 1:length(a)){
  for(j in 1:length(b)){
    idx= idx+1
    alpha[idx]=a[i]
    beta[idx]=b[j]
    res = simulate(a[i],b[j])
    ans.ins[idx] = res$ins
    ans.police[idx]=res$police
    ans.months[idx]=res$numMonths
    
  }
}
results = data.frame(alpha=alpha, beta = beta, ins = ans.ins, police=ans.police,
                     month=ans.months)
print(results)
