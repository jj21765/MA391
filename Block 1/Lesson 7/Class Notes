Constraints 

f=function(x){((0.65???0.01*x)*(200+5*x)???0.45*x)*(-1)}
x=1
ans=optim(x,f)
print(ans)

x=seq(0,20,0.1)
plot(x,-f(x),type="l",lwd=3,col="black",main="Maximization")
points(ans$par,-f(ans$par),pch=21,bg="orange",cex=2)
plot(x,f(x),type="l",lwd=3, col="black",main="Minimization")
points(ans$par,f(ans$par),pch=21,bg="yellow",cex=2)
#this was one variable optimization
#can just use optim

#now for two variable optimization: 
P = function(x){
  return(((339-0.01*x[1]-0.003*x[2])*x[1]
          +(399-0.004*x[1]-0.01*x[2])*x[2]
          -(400000+195*x[1]+225*x[2]))*-1)
}
x=c(500,500)#starting pt for optimization
ans=optim(x,P,method="BFGS")#BFGS calculates Hessian
print(ans)
#the $par gives us the optimiziaing parameter values
X = list(x=seq(2000,6000,10),y=seq(3000,10000,10))
Z=Outer(P,X)
## contour plot ##
contour(X$x,X$y,-Z,main="P(x,y)-optimal point in Red")
points(ans$par[1],ans$par[2],pch=21,bg="red",cex=2)

obj=function(x){((600-3*x[1]+x[2])*x[1]+(800-2*x[2]+x[1])*x[2])*(-1)}
#constraints: nonlinear
X=list(x=seq(100,500),y=seq(100,500))
Z=Outer(obj,X)
contour(X$x,X$y,-Z)

#parametric equations for constraints
r=function(t){c(200*sin(t)+300,200*cos(t)+300)}
r=Vectorize(r)
t=seq(0.2*pi,0.01)
Xt=list(x=r(t)[1,],y=r(t)[2,])
points(Xt$x,Xt$y,type="l",col="red",lwd=3)

library(MASS);library(NlcOptim)
x0 = c(300,500)
## Single nonlinear constraint ##
con = function (x){
  f = NULL
  f = rbind(f,(x[1]-300)^2+(x[2]-300)^2-200^2)
  return(list(ceq=f,c=NULL))
}
ans=solnl(x0,objfun=obj,confun=con)
print(ans)
#make sure to have library MASS and N1oCpom or wahtever
#to get the hessian and lambda

#linear equality constraints
#use the Aeq and Beq for solnl
Aeq = matrix(c(3,-5,2,7,2,12,2,-1),nrow=2,byrow=TRUE)
print(Aeq)
Beq = matrix(c(300,200))
print(Beq)
#this just shows how to input a matrix

## Aeq and Beq are the Aeq*x = Beq ##
Aeq = matrix(c(12,5),nrow=1)
Beq = matrix(5000)
x0=c(0,500)
ans=solnl(x0,objfun = obj,Aeq=Aeq,Beq=Beq)
print(ans)
